package com.showPricing;

import java.util.Collections;
import java.util.Map;

import com.showTypes.Concert;
import com.showTypes.Movies;
import com.showTypes.Theatre;

public class MultiShowBooking {

	public static void main(String[] args) {
		double totalRevenue = 0.00;

		//Task 1: Calculate cost for each show : returned in the calculateTotalCost()
		System.out.println("Solution 1:");
		MultiShowPricingCalculator movieAvengers = new Movies("Avengers", "Movie", "Regular", 200, 3, 10, 10, true);
		totalRevenue += movieAvengers.calculateTotalCost();

		MultiShowPricingCalculator movieInception = new Movies("Inception", "Movie", "VIP", 500, 5, 10, 10, false);
		totalRevenue += movieInception.calculateTotalCost();
		
		MultiShowPricingCalculator concert = new Concert("Live Music Fest", "Concert", "Standard", 1000, 4, 5);
		totalRevenue += concert.calculateTotalCost();
		
		MultiShowPricingCalculator theatreHamlet = new Theatre("Hamlet", "Theatre", "Premium", 300, 2, 20, 100, true);
		totalRevenue += theatreHamlet.calculateTotalCost();
		
		//Task 2: Calculate total revenue generated combining all type of shows 
		System.out.println("Solution 2:");
		System.out.println("Total Revenue generated by all the shows: "+totalRevenue);
		
		//Task 3: Find highest revenue generated show type
		System.out.println("Solution 3:");
		for (Map.Entry <String, Double> showMap : MultiShowPricingCalculator.showsRevenue.entrySet()) {
			//System.out.println("Cumulative revenue for the "+ showMap.getKey()+" show is, "+showMap.getValue());
			if (Collections.max(MultiShowPricingCalculator.showsRevenue.values())==showMap.getValue()) {
				System.out.println("Show with highest total revenue is, "+showMap.getKey());
			}
		}
		
		
	}

}
